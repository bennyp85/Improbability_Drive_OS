{
    "name": "ProbQL",
    "scopeName": "source.probql",
    "patterns": [
        {
            "match": "\\b(function|module|import|export|return|if|else|for|while|break|continue|let|const|var|new|this|class|extends|super|static|async|await|try|catch|finally|throw|yield|switch|case|default|delete|typeof|instanceof|void|in|of|with|debugger)\\b",
            "name": "keyword.control.probql"
        },
        {
            "match": "\\b(true|false|null|undefined|NaN|Infinity)\\b",
            "name": "constant.language.probql"
        },
        {
            "match": "\\b(UI|ProbabilityModule|QuantumModule|EnergyModule|SafetyModule|LearningModule)\\b",
            "name": "support.class.probql"
        },
        {
            "match": "\\b([0-9]+(\\.[0-9]+)?)\\b",
            "name": "constant.numeric.probql"
        },
        {
            "match": "\".*?\"|'.*?'",
            "name": "string.quoted.probql",
            "begin": "\"|'",
            "end": "\"|'",
            "patterns": [
                {
                    "name": "constant.character.escape.probql",
                    "match": "\\\\(.)"
                }
            ]
        },
        {
            "name": "comment.line.double-slash.probql",
            "match": "//.*"
        },
        {
            "match": "[.(){}=,;:\\[\\]]",
            "name": "punctuation.operator.probql"
        },
        {
            "match": "[+\\-*/%&|^~!<>?]=?|&&|\\|\\||\\?\\?|\\*\\*|\\+\\+|--|=>|\\.",
            "name": "keyword.operator.probql"
        },
        {
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
            "name": "variable.other.probql"
        },
        {
            "match": "\\b[A-Z][A-Z0-9_]+\\b",
            "name": "constant.other.probql"
        }
    ],
    "fileTypes": [
        "probql"
    ]
}
